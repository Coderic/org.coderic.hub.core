name: Deploy Maven Release

on:
  workflow_dispatch: {}
  release:
    types: [published]
concurrency:
  group: release
permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write
env:
  GPG_PASSPHRASE: ${{ secrets.RELEASES_GPG_PASSPHRASE }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven
          gpg-private-key: ${{ secrets.RELEASES_GPG_PRIVATE_KEY }}
      - name: Test with Maven
        run: ./mvnw --batch-mode test verify --file pom.xml
  build:
    runs-on: ubuntu-24.04
    needs: test
    environment:
      name: release
      url: ${{ steps.deployment.outputs.url }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven
          gpg-private-key: ${{ secrets.RELEASES_GPG_PRIVATE_KEY }}
          settings-path: ${{ github.workspace }}
      - name: Configure GPG
        run: |
          mkdir -p ~/.gnupg
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpgconf --kill gpg-agent
      - name: Import GPG Key
        run: |
          echo "${{ secrets.RELEASES_GPG_PRIVATE_KEY }}" | gpg --batch --import
          gpg --list-secret-keys --keyid-format=long
          gpg --export-secret-keys --armor 59FD6DD612674446 > /home/runner/.gnupg/secring.gpg
      - name: Configure Git
        run: |
          git config --global user.email "coderic@coderic.org"
          git config --global user.name "Coderic"
          git config --global user.signingkey 59FD6DD612674446
          git config --global commit.gpgsign true
          git config --global push.default simple
      - name: Set GitHub Credentials
        run: |
          git config --global credential.helper 'cache --timeout=3600'
          git config --global credential.username "github-actions[bot]"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
      - name: Verify GPG Signing
        run: |
          echo "test" | gpg --clearsign
      - name: Build package
        run: ./mvnw --batch-mode release:prepare --file pom.xml
      - name: Attest build provenance
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: target/*.war
      - name: Deploy release
        id: deployment
        run: ./mvnw --batch-mode release:perform --file pom.xml
  deploy:
    runs-on: ubuntu-24.04
    environment:
      name: staging
      url: ${{ steps.deployment.outputs.url }}
    needs: build
    steps:
      - uses: actions/checkout@v4
      - run: sed -i 's|http://localhost:8080/|${{ secrets.TOMCAT_HOST }}|g' pom.xml
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven
          server-id: TomcatServer
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.RELEASES_GPG_PRIVATE_KEY }}
      - name: Deploy package
        run: ./mvnw --batch-mode tomcat7:deploy --file pom.xml
        env:
          MAVEN_USERNAME: ${{ secrets.TOMCAT_USER }}
          MAVEN_PASSWORD: ${{ secrets.TOMCAT_PASS }}
